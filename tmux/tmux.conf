


#
# Example .tmux.conf
#
# By Nicholas Marriott. Public domain.
#

# # Some tweaks to the status line
# set -g status-right "%H:%M"
# set -g window-status-current-style "underscore"
#
# # If running inside tmux ($TMUX is set), then change the status line to red
# %if #{TMUX}
# set -g status-bg red
# %endif
#
# # Enable RGB colour if running in xterm(1)
# set-option -sa terminal-features ",xterm*:RGB"
#
# # Change the default $TERM to tmux-256color
# set -g default-terminal "tmux-256color"
#
# # No bells at all
# set -g bell-action none
#
# # Keep windows around after they exit
# set -g remain-on-exit on
#
# # Change the prefix key to C-a
# set -g prefix C-a
# unbind C-b
# bind C-a send-prefix
#
# # Turn the mouse on, but without copy mode dragging
# set -g mouse on
# unbind -n MouseDrag1Pane
# unbind -Tcopy-mode MouseDrag1Pane
#
# # Some extra key bindings to select higher numbered windows
# bind F1 selectw -t:10
# bind F2 selectw -t:11
# bind F3 selectw -t:12
# bind F4 selectw -t:13
# bind F5 selectw -t:14
# bind F6 selectw -t:15
# bind F7 selectw -t:16
# bind F8 selectw -t:17
# bind F9 selectw -t:18
# bind F10 selectw -t:19
# bind F11 selectw -t:20
# bind F12 selectw -t:21
#
# # A key to toggle between smallest and largest sizes if a window is visible in
# # multiple places
# bind F set -w window-size
#
# # Keys to toggle monitoring activity in a window and the synchronize-panes option
# bind m set monitor-activity
# bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'
#
# # Create a single default session - because a session is created here, tmux
# # should be started with "tmux attach" rather than "tmux new"
# new -d -s0 -nirssi 'exec irssi'
# set -t0:0 monitor-activity on
# set -t0:0 aggressive-resize on
# neww -d -ntodo 'exec emacs ~/TODO'
# setw -t0:1 aggressive-resize on
# neww -d -nmutt 'exec mutt'
# setw -t0:2 aggressive-resize on
# neww -d
# neww -d
# neww -d

# bind-key n select-pane -L
# bind-key e select-pane -D
# bind-key i select-pane -U
# bind-key o select-pane -R


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-n' if-shell "$is_vim" 'send-keys C-n'  'select-pane -L'
bind-key -n 'C-e' if-shell "$is_vim" 'send-keys C-e'  'select-pane -D'
bind-key -n 'C-i' if-shell "$is_vim" 'send-keys C-i'  'select-pane -U'
bind-key -n 'C-o' if-shell "$is_vim" 'send-keys C-o'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-n' select-pane -L
bind-key -T copy-mode-vi 'C-e' select-pane -D
bind-key -T copy-mode-vi 'C-i' select-pane -U
bind-key -T copy-mode-vi 'C-o' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


bind-key C-n select-pane -L
bind-key C-e select-pane -D
bind-key C-i select-pane -U
bind-key C-o select-pane -R


run '~/.tmux/plugins/tpm/tpm'
